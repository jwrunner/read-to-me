# #.travis.yml

language: node_js
node_js:
  - "10.15.1"

branches:
  only:
    - master
    - develop

before_install:
  - openssl aes-256-cbc -K $encrypted_032acfb1b72d_key -iv $encrypted_032acfb1b72d_iv -in src/environments/env.tar.enc -out src/environments/env.tar -d
  - tar xvf src/environments/env.tar --directory src/environments

jobs:
  include:
    - stage: deploy-dev
      if: branch = develop
      before_script:
        - npm install -g firebase-tools
        - npm install -g @angular/cli
      script:
        - ng build --prod # Deploy production app to dev server to force minification and service worker (need to figure out how to get service to work in dev app but not localhost. I may need to create a third (staging project))
        # - python weigh_in.py dist/main.js
        # curl -H "Authorization: token ${GITHUB_TOKEN}" -X POST \
        # -d "{\"body\": \"Hello world\"}" \
        # "https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments"
      after_success:
        - firebase deploy -P default --only hosting --token $FIREBASE_TOKEN

    - stage: lighthouse-audit
      if: type = pull_request
      # if: branch = develop AND type = pull_request # Use this if in the habit of ALWAYS using pull requests to develop and never pushing directly
      install:
        # - npm install # for the sake of installing the lighthouse bot
        - npm install https://github.com/ebidel/lighthousebot
      script:
        # Lighthouse benchmarks: performance, progressive web app, accessibility, best practices, SEO
        - npm run lh -- --perf=90 --pwa=100 --a11y=80 --bp=80 --seo=80 https://read-books-to-me.firebaseapp.com/

    - stage: deploy-prod
      if: branch = master AND type = push
      before_script:
        - npm install -g firebase-tools
        - npm install -g @angular/cli
      script:
        - ng build --prod
        - npm link
        - patch-safari-sw
      after_success:
        - firebase deploy -P production --only hosting --token $FIREBASE_TOKEN

notifications:
  email:
    on_failure: change
    on_success: always